# Generated by Django 3.2 on 2021-05-20 15:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import scoringengine.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(limit_value=1)])),
                ('text', models.CharField(max_length=200)),
                ('field_name', models.CharField(help_text='Field name should contain only letters, numbers and underscore', max_length=200, validators=[scoringengine.models.validate_field_name])),
                ('weight', models.DecimalField(decimal_places=2, default=1, max_digits=5, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('x_axis', models.BooleanField()),
                ('y_axis', models.BooleanField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('owner', 'number'),
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule', models.CharField(help_text='Rule should start with "If" and may contain only valid numbers, questions "Field names" in curly braces (e.g. {field_name}) combined with arithmetic (+, -, *, /), comparison (>, <, ==, !=, >=, <=) and logical operations (and, or, not)', max_length=200, validators=[scoringengine.models.validate_rule])),
                ('response_text', models.CharField(blank=True, max_length=200)),
                ('affiliate_name', models.CharField(blank=True, max_length=200)),
                ('affiliate_image', models.URLField(blank=True, max_length=2048)),
                ('affiliate_link', models.URLField(blank=True, max_length=2048)),
                ('redirect_url', models.URLField(blank=True, max_length=2048)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to=settings.AUTH_USER_MODEL)),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rule', to='scoringengine.question')),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('lead_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('x_axis', models.DecimalField(decimal_places=2, max_digits=5)),
                ('y_axis', models.DecimalField(decimal_places=2, max_digits=5)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='Text should contain at least one positive number. Max number will be used in rules checks', max_length=200)),
                ('points', models.IntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='scoringengine.question')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=200)),
                ('response', models.CharField(max_length=200)),
                ('points', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('response_text', models.CharField(blank=True, max_length=200)),
                ('affiliate_name', models.CharField(blank=True, max_length=200)),
                ('affiliate_image', models.URLField(blank=True, max_length=2048)),
                ('affiliate_link', models.URLField(blank=True, max_length=2048)),
                ('redirect_url', models.URLField(blank=True, max_length=2048)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='scoringengine.lead')),
            ],
        ),
        migrations.AddConstraint(
            model_name='question',
            constraint=models.UniqueConstraint(fields=('number', 'owner'), name='unique_number'),
        ),
        migrations.AddConstraint(
            model_name='question',
            constraint=models.UniqueConstraint(fields=('field_name', 'owner'), name='unique_field_name'),
        ),
        migrations.AddConstraint(
            model_name='choice',
            constraint=models.UniqueConstraint(fields=('question', 'text'), name='unique_choice'),
        ),
        migrations.AddConstraint(
            model_name='answer',
            constraint=models.UniqueConstraint(fields=('lead', 'field_name'), name='unique_answer'),
        ),
    ]
