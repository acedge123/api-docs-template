# Generated by Django 3.2 on 2021-07-05 12:25

from django.db import migrations


def forwards_func(apps, schema_editor):
    # Update default value for existing questions
    Question = apps.get_model('scoringengine', 'Question')
    ScoringModel = apps.get_model('scoringengine', 'ScoringModel')
    ValueRange = apps.get_model('scoringengine', 'ValueRange')
    db_alias = schema_editor.connection.alias

    questions = Question.objects.using(db_alias).order_by('pk').all()

    for question in questions:

        if question.weight > 0 or question.x_axis or question.y_axis:
            sm = ScoringModel(
                question=question,
                weight=question.weight,
                x_axis=question.x_axis,
                y_axis=question.y_axis,
                owner=question.owner
            )

            sm.save()

            if question.choices.count() > 0:
                for choice in question.choices.all():
                    vr = ValueRange(
                        scoring_model=sm,
                        start=int(choice.value),
                        points=choice.points
                    )

                    vr.save()


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('scoringengine', '0012_auto_20210706_1301'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
