# Generated by Django 3.2 on 2021-07-09 15:26

from django.db import migrations, models
import scoringengine.models


class Migration(migrations.Migration):

    dependencies = [
        ("scoringengine", "0014_auto_20210706_1327"),
    ]

    operations = [
        migrations.AlterField(
            model_name="question",
            name="type",
            field=models.CharField(
                choices=[("O", "Open"), ("CH", "Choices"), ("S", "Slider")],
                help_text="<b>Open</b> questions without specific expected answer. Has no associated value, so can not be used in recommendations rules and in scoring models formulas for X-axis, Y-axis score calculation. </br> <b>Choices</b> question with predefined expected answers options. Answer can be any text. Each answer option has associated value. Can be used in recommendations rules and in scoring models formulas for X-axis, Y-axis score calculation. </br><b>Slider</b> question with predefined range of possible values. Answer is a value. Can be used in recommendations rules and in scoring models formulas for X-axis, Y-axis score calculation. </br>",
                max_length=2,
            ),
        ),
        migrations.AlterField(
            model_name="recommendation",
            name="rule",
            field=models.CharField(
                help_text='Rule should start with "If" and may contain only valid numbers, questions with choices "Field names" in curly braces (e.g. {field_name}) combined with arithmetic (+, -, *, /), comparison (>, <, ==, !=, >=, <=), logical operations (and, or, not)and parentheses',
                max_length=200,
                validators=[scoringengine.models.validate_rule],
            ),
        ),
        migrations.AlterField(
            model_name="scoringmodel",
            name="formula",
            field=models.CharField(
                blank=True,
                help_text='Leave empty to select points based on direct value from associated question.</br>Add expression with "Field names" in curly braces (e.g. {field_name}), arithmetic (+, -, *, /) operations and parentheses to select points based on expression result.',
                max_length=200,
                validators=[scoringengine.models.validate_formula],
            ),
        ),
        migrations.AlterField(
            model_name="valuerange",
            name="end",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Left empty for left-closed range",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="valuerange",
            name="start",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Left empty for right-closed range",
                max_digits=12,
                null=True,
            ),
        ),
    ]
