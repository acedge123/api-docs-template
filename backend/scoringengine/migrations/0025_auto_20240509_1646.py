# Generated by Django 3.2 on 2024-05-09 16:46

from django.db import migrations, models
import scoringengine.models


class Migration(migrations.Migration):

    dependencies = [
        ('scoringengine', '0024_auto_20240409_1132'),
    ]

    operations = [
        migrations.AlterField(
            model_name='question',
            name='type',
            field=models.CharField(choices=[('D', 'Date'), ('CH', 'Choices'), ('I', 'Integer'), ('MC', 'Multiple choices'), ('O', 'Open'), ('S', 'Slider')], help_text='<b>Open</b> question without specific expected answer. Has associated value "1" if answer provided and "0" otherwise. Can be used in recommendations rules and in scoring models formulas for X-axis, Y-axis score calculation. </br> <b>Choices</b> question with predefined expected answers options. Answer can be any text. Each answer option has associated value. Can be used in recommendations rules and in scoring models formulas for X-axis, Y-axis score calculation. </br><b>Multiple choices</b> question with predefined expected answers options. Answer can be any text. Multiple answers selection allowed. Each answer option has associated value. Can be used in scoring model for X-axis, Y-axis score calculation but not in recommendations rules and not in scoring models formulas. </br><b>Slider</b> question with predefined range of possible values. Answer is a value. Can be used in recommendations rules and in scoring models formulas for X-axis, Y-axis score calculation. </br><b>Integer</b> works pretty the same as <b>Slider</b> but without range </br><b>Date</b> doesn\'t have predefined range. </br>', max_length=2),
        ),
        migrations.AlterField(
            model_name='recommendation',
            name='rule',
            field=models.CharField(help_text='Rule should start with "If" and may contain only valid numbers, questions with choices "Field names" in curly braces (e.g. {field_name}) combined with arithmetic (+, -, *, /), comparison (>, <, ==, !=, >=, <=), logical operations (and, or, not) and parentheses.</br>Mathematical which may be used in are: count, max, mean, median, min, sum.', max_length=500, validators=[scoringengine.models.validate_rule]),
        ),
        migrations.AlterField(
            model_name='scoringmodel',
            name='formula',
            field=models.CharField(blank=True, help_text='Leave empty to select points based on direct value from associated question.</br>Add expression with "Field names" in curly braces (e.g. {field_name}), arithmetic (+, -, *, /) operations and parentheses to select points based on expression result.</br>Mathematical which may be used in are: count, max, mean, median, min, sum', max_length=500, validators=[scoringengine.models.validate_formula]),
        ),
    ]
